# ?? ??
server.port=8000

# ?????? ??
spring.application.name=gateway-service

# ? ?????? ?? ??
spring.main.web-application-type=reactive
spring.main.allow-bean-definition-overriding=true

# Gateway ??? ??
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=lb://auth-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**

spring.cloud.gateway.routes[1].id=detail-page
spring.cloud.gateway.routes[1].uri=lb://detail-page
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/packages/detail/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[2].id=travel-product-service
spring.cloud.gateway.routes[2].uri=lb://travel-product-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/packages/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[3].id=admin-service
spring.cloud.gateway.routes[3].uri=lb://admin-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/admins/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[4].id=board-service
spring.cloud.gateway.routes[4].uri=lb://board-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/posts/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1

# CORS ??
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:5173
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=Authorization,Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
spring.cloud.gateway.globalcors.corsConfigurations.[/**].exposedHeaders=Authorization
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].maxAge=3600

# H2 DB ??
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 ??
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true
spring.h2.console.settings.web-admin-password=admin

# JPA ??
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ?? ??? ??
spring.web.resources.static-locations=classpath:/static/,classpath:/templates/
spring.mvc.static-path-pattern=/**

# Thymeleaf ??
spring.thymeleaf.cache=false

# Eureka ??
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# JWT ??
jwt.secret=your-256-bit-secret-key-here-must-be-at-least-32-characters-long
jwt.expiration=86400000



# Message
spring.messages.basename=messages/label
spring.messages.encoding=UTF-8

# RabbitMQ 설정
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.webflux.cors.allowed-origins=http://localhost:5173
spring.webflux.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.webflux.cors.allowed-headers=Authorization,Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
spring.webflux.cors.exposed-headers=Authorization
spring.webflux.cors.allow-credentials=true
spring.webflux.cors.max-age=3600